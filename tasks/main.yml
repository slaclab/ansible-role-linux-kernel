---

- include_tasks: "{{ ansible_os_family | lower() }}.yml"

- name: Get /var/run/reboot-required stat
  # Note: Should exist on Debian based OS if reboot is required
  stat:
    path: /var/run/reboot-required
  register: reboot_flag

- name: Set grubby
  shell: /usr/sbin/grubby --set-default /boot/vmlinuz-{{ _kernel }}.x86_64 

- name: "Reboot if kernel changed (from {{ ansible_kernel | regex_replace('.x86_64','') }} to {{ _kernel }})."
  reboot:
  register: linux_kernel_rebooted
  when:
    - reboot_on_kernel_update | bool
    - (not (ansible_kernel | kernel_match(_kernel)) or reboot_flag.stat.exists)

- name: "Ensure console kernel options are set"
  lineinfile:
    path: /etc/default/grub
    regexp: ^GRUB_CMDLINE_LINUX=\"(?P<defaults>.*?)\s*(?P<console> console=.*)?\"$
    line: GRUB_CMDLINE_LINUX="\g<defaults> {{ kernel_console }}"
    backrefs: yes
  register: grub_changed

- name: "Rebuild grub"
  command: grub2-mkconfig â€“o /boot/grub2/grub.cfg >/dev/null
  when:
    - grub_changed.changed

- name: Update facts
  setup:
  when: linux_kernel_rebooted.changed  # noqa no-handler

- name: Show kernel version after reboot
  debug:
    msg: 'The current kernel version is now: {{ ansible_kernel }}.'
  when: linux_kernel_rebooted.changed  # noqa no-handler
